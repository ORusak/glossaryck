{
    /*
	// Place your snippets for JavaScript here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	"Print to console": {
		"prefix": "log",
		"body": [
			"console.log('$1');",
			"$2"
		],
		"description": "Log output to console"
	}
*/
    "Print to console": {
        "prefix": "log",
        "body": ["console.log('$1');", "$2"],
        "description": "Log output to console"
    },
    "Print function": {
        "prefix": "func",
        "body": ["function ('$1');", "$2"],
        "description": "Function body"
    },
    "Print then": {
        "prefix": "then",
        "body": [".then(('$1') => {", "$2", "}"],
        "description": "Function body"
    },
    "Print use strict": {
        "prefix": "new",
		"body": [
			"/**  */", 
			"'use strict';", 
			"",
			"module.exports = $0"],
        "description": "File template"
    },
    "Print test file": {
        "prefix": "test",
		"body": [
			"/* global describe, it */", 
			"/* Unit test. */", 
			"'use strict';", 
			"const sinon = require('sinon');",
			"const should = require('should');",
			"",
			"describe('', () => {",
			"",
			"    describe('', () => {",
			"",
			"        it('', () => {",
			"        });",
			"",
			"    });",
			"",
			"});",
			""
		],
        "description": "File template"
    },
    "Print class": {
        "prefix": "class",
		"body": [
			"/**", 
			" * @class", 
			" */", 
			"class $1 extends $2 {", 
			"", 
			"    /**", 
			"     * ", 
			"     */",  
			"    constructor ($3) {",  
			"        $4",  
			"    }",  
			"}"],
        "description": "File template"
    }
}
